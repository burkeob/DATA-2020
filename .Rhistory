prop_df2 <- compute_props(df2, political_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_political_imp <- make_year_graph(political_imp)
plot_political_imp
ggsave("EDA Images/political_imp_time.png", device = "png")
# race_imp ------------
prop_df1 <- compute_props(df1, race_imp, wgt_comb)
prop_df2 <- compute_props(df2, race_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_race_imp <- make_year_graph(race_imp)
plot_race_imp
ggsave("EDA Images/race_imp_time.png", device = "png")
# religion_imp ------------
prop_df1 <- compute_props(df1, religion_imp, wgt_comb)
prop_df2 <- compute_props(df2, religion_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_religion_imp <- make_year_graph(religion_imp)
plot_religion_imp
ggsave("EDA Images/religion_imp_time.png", device = "png")
# sex_imp ------------
prop_df1 <- compute_props(df1, sex_imp, wgt_comb)
prop_df2 <- compute_props(df2, sex_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_sex_imp <- make_year_graph(sex_imp)
plot_sex_imp
ggsave("EDA Images/sex_imp_time.png", device = "png")
# arrange the plots in a 3 by 3 grid using arrangeGrob
targets_w_na <- grid.arrange(arrangeGrob(plot_wealth_imp, plot_parents_imp, plot_educ_imp, ncol = 3),
arrangeGrob(plot_hardWork_imp, plot_rightPpl_imp, plot_political_imp, ncol = 3),
arrangeGrob(plot_race_imp, plot_religion_imp, plot_sex_imp, ncol = 3),
nrow = 3)
ggsave("EDA Images/Combined Year Plot.png", plot = targets_w_na)
df <- read_excel("GSS.xlsx") |>
filter(year == 1987 | (year == 2021 & ballot %in% c("ballot b", "ballot c"))) |>
select(-c(ballot, id_))
df <- read_excel("GSS.xlsx") |>
filter(year == 1987 | (year == 2021 )) |>
select(-c(ballot, id_))
df <- read_excel("GSS.xlsx") |>
filter(year == 1987 | (year == 2021 ))
levels(df$ballot)
View(df)
df <- read_excel("GSS.xlsx") |>
filter(year == 1987 | (year == 2021 & ballot == "Ballot c")) |>
select(-c(ballot, id_))
df <- read_excel("GSS.xlsx") |>
filter(year == 1987 | (year == 2021 & ballot == "Ballot c") | (year == 2021 & ballot == "Ballot b")) |>
select(-c(ballot, id_))
library(tidyverse)
library(readxl)
setwd("~/Desktop/DSI Spring/Stats/DATA-2020/")
df <- read_excel("GSS.xlsx") |>
filter(year == 1987 | (year == 2021 & ballot == "Ballot c") | (year == 2021 & ballot == "Ballot b")) |>
select(-c(ballot, id_))
# make combined weight column
df <- df |>
mutate(wgt_comb = ifelse(year == 1987, wtssall, wtssnrps))
# replace outcome vars with 1 if agree, 0 if disagree, and NA if missing or unsure
df$wealth_imp = ifelse(df$opwlth %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$wealth_imp = ifelse((df$opwlth %in% c("Not important at all", "Not very important") | df$wealth_imp == 1), df$wealth_imp, NA)
df$parents_imp = ifelse(df$oppared %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$parents_imp = ifelse((df$oppared %in% c("Not important at all", "Not very important") | df$parents_imp == 1), df$parents_imp, NA)
df$educ_imp = ifelse(df$opeduc %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$educ_imp = ifelse((df$opeduc %in% c("Not important at all", "Not very important") | df$educ_imp == 1), df$educ_imp, NA)
df$hardWork_imp = ifelse(df$ophrdwrk %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$hardWork_imp = ifelse((df$ophrdwrk %in% c("Not important at all", "Not very important") | df$hardWork_imp == 1), df$hardWork_imp, NA)
df$rightPpl_imp = ifelse(df$opknow %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$rightPpl_imp = ifelse((df$opknow %in% c("Not important at all", "Not very important") | df$rightPpl_imp == 1), df$rightPpl_imp, NA)
df$political_imp = ifelse(df$opclout %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$political_imp = ifelse((df$opclout %in% c("Not important at all", "Not very important") | df$political_imp == 1), df$political_imp, NA)
df$race_imp = ifelse(df$oprace %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$race_imp = ifelse((df$oprace %in% c("Not important at all", "Not very important") | df$race_imp == 1), df$race_imp, NA)
df$religion_imp = ifelse(df$oprelig %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$religion_imp = ifelse((df$oprelig %in% c("Not important at all", "Not very important") | df$religion_imp == 1), df$religion_imp, NA)
df$sex_imp = ifelse(df$opsex %in% c("Very important", "Fairly important", "Essential"), 1, 0)
df$sex_imp = ifelse((df$opsex %in% c("Not important at all", "Not very important") | df$sex_imp == 1), df$sex_imp, NA)
# Drop the orignial outcomes vars - can add them back in if we want more detail
df <- df |>
select(-c(opsex,oprelig,oprace,opclout,opknow,ophrdwrk,opeduc,oppared,opwlth))
# Clean the feature vars
# Start with categorical - can keep missing values as their own category
df <- df |>
mutate(year = as.factor(year))
df <- df |>
mutate(wrkstat = ifelse(wrkstat %in% c(".n:  No answer" , ".s:  Skipped on Web"), "missing", wrkstat)) |>
mutate(wrkstat = as.factor(wrkstat))
df <- df |>
mutate(marital = ifelse(marital %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".d:  Do not Know/Cannot Choose"), "missing", marital)) |>
mutate(marital = as.factor(marital))
df <- df |>
mutate(sex = ifelse(sex %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".i:  Inapplicable",
".d:  Do not Know/Cannot Choose"), "missing", sex)) |>
mutate(sex = as.factor(sex))
# Not really useful - lets just do above and below 25,000
df <- df |>
mutate(income = ifelse(income %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".i:  Inapplicable",
".r:  Refused",
".d:  Do not Know/Cannot Choose"), "missing", ifelse(
income == "$25,000 or more", "$25,000 or more", "Less than $25,000"
))) |>
mutate(income = as.factor(income))
df <- df |>
mutate(region = as.factor(region))
# We may want to undo this, as a first pass I saw that strong demo was significant
df <- df |>
mutate(partyid = ifelse(partyid %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".i:  Inapplicable",
".d:  Do not Know/Cannot Choose"), "missing", ifelse(
str_detect(partyid, "Ind"), "Independent",
ifelse(str_detect(partyid, "demo"), "Democrat", "Republican")
))) |>
mutate(partyid = as.factor(partyid))
df <- df |>
mutate(relig = ifelse(relig %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".d:  Do not Know/Cannot Choose"), "missing", relig)) |>
mutate(relig = as.factor(relig))
# whether this person was born in this country
df <- df |>
mutate(born = ifelse(born %in% c("YES", "NO"), born, "missing")) |>
mutate(born = as.factor(born))
df <- df |>
mutate(income = as.factor(income))
levels(df$relig)
# Numerical - will have to do some sort of imputation to keep these
df <- df |>
mutate(age = as.numeric(age)) |>
mutate(age = ifelse(age < 0 , NA, age))
# educ is years of schooling
df <- df |>
mutate(educ = as.numeric(educ)) |>
mutate(educ = ifelse(educ < 0 , NA, educ))
# Target vars
# c(wealth_imp, parents_imp, educ_imp, hardWork_imp, rightPpl_imp, political_imp, race_imp, religion_imp, sex_imp)
# weight vars - don't include in any regressions or whatnot
# also don't include the id_ var
# wtssall, vstrat, vpsu, wgt_comb, oversamp, wtssnrps
save(df, file = "cleaned_data.Rdata")
load(file = "cleaned_data.Rdata")
knitr::opts_chunk$set(root.dir ="/Users/arianaschindler/Documents/2023_spring/DATA2020/final_project")
# clearing environment
rm(list=ls())
# loading in the cleaned data
wd <- "~/Desktop/DSI Spring/Stats/DATA-2020/"
setwd(wd)
load("cleaned_data.Rdata")
# loading packages
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(gridExtra)
# turning race feature into categorical factor
df <- df %>%
mutate(race = ifelse(race %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".i:  Inapplicable",
".d:  Do not Know/Cannot Choose"), "missing", race)) %>%
mutate(race = as.factor(race))
# turning zodiac feature into categorical factor
df <- df %>%
mutate(zodiac = ifelse(zodiac %in% c(".n:  No answer" ,
".s:  Skipped on Web",
".i:  Inapplicable",
".d:  Do not Know/Cannot Choose"), "missing", zodiac)) %>%
mutate(zodiac = as.factor(zodiac))
# turning nulls into "No Response" for possible target features
df <- df %>%
mutate(wealth_imp = ifelse(is.na(wealth_imp), "No Response", as.character(wealth_imp))) %>%
mutate(wealth_imp = factor(wealth_imp))
df <- df %>%
mutate(parents_imp = ifelse(is.na(parents_imp), "No Response", as.character(parents_imp))) %>%
mutate(parents_imp = factor(parents_imp))
df <- df %>%
mutate(educ_imp = ifelse(is.na(educ_imp), "No Response", as.character(educ_imp))) %>%
mutate(educ_imp = factor(educ_imp))
df <- df %>%
mutate(hardWork_imp = ifelse(is.na(hardWork_imp), "No Response", as.character(hardWork_imp))) %>%
mutate(hardWork_imp = factor(hardWork_imp))
df <- df %>%
mutate(rightPpl_imp = ifelse(is.na(rightPpl_imp), "No Response", as.character(rightPpl_imp))) %>%
mutate(rightPpl_imp = factor(rightPpl_imp))
df <- df %>%
mutate(political_imp = ifelse(is.na(political_imp), "No Response", as.character(political_imp))) %>%
mutate(political_imp = factor(political_imp))
df <- df %>%
mutate(race_imp = ifelse(is.na(race_imp), "No Response", as.character(race_imp))) %>%
mutate(race_imp = factor(race_imp))
df <- df %>%
mutate(religion_imp = ifelse(is.na(religion_imp), "No Response", as.character(religion_imp))) %>%
mutate(religion_imp = factor(religion_imp))
df <- df %>%
mutate(sex_imp = ifelse(is.na(sex_imp), "No Response", as.character(sex_imp))) %>%
mutate(sex_imp = factor(sex_imp))
# splitting data into two dfs for each year
df1 <- df %>%
filter(df$year=='1987')
df2 <- df %>%
filter(df$year=='2021')
# extracting dimensions for rows and columns
# 1987 data
dim_rows1 <- dim(df1)[1]
dim_cols1 <- dim(df1)[2]
#2021 data
dim_rows2 <- dim(df2)[1]
dim_cols2 <- dim(df2)[2]
# printing dimensions
cat(paste('Number of Rows in Survey Data from 1987:', dim_rows1, '\nNumber of Columns:', dim_cols1, '\n', '\nNumber of Rows in Survey Data from 2021:', dim_rows2, '\nNumber of Columns:', dim_cols2))
#==========================================
# CHECKING OUT POSSIBLE TARGET FEATURES
#==========================================
# function to calculate the proportions of any categorical feature
compute_props <- function(df, group_col, weight_col) {
d <- {{df}} %>%
group_by({{ group_col }}, year) %>%
summarize(prop = sum({{ weight_col }}, na.rm = TRUE)) %>%
ungroup() %>%
mutate(prop = prop / sum(prop))
return(d)
}
# function to make year comparison
make_year_graph <- function(m) {
g <- ggplot(prop_df, aes(fill={{m}}, y=prop, x=year)) +
geom_bar(position="stack", stat="identity") +
geom_text(aes(label = scales::percent(prop)),
position = position_stack(vjust = 0.5),
size = 2) +
labs(title = deparse(substitute(m)),
x = "Response",
y = "Proportion") +
theme(text = element_text(size = 8))
}
# wealth_imp ------------
# calculate weighted proportion by group
prop_df1 <- compute_props(df1, wealth_imp, wgt_comb)
prop_df2 <- compute_props(df2, wealth_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_wealth_imp <- make_year_graph(wealth_imp)
plot_wealth_imp
ggsave("EDA Images/wealth_time.png", device = "png")
# parents_imp ------------
prop_df1 <- compute_props(df1, parents_imp, wgt_comb)
prop_df2 <- compute_props(df2, parents_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_parents_imp <- make_year_graph(parents_imp)
plot_parents_imp
ggsave("EDA Images/parents_time.png", device = "png")
# educ_imp ------------
prop_df1 <- compute_props(df1, educ_imp, wgt_comb)
prop_df2 <- compute_props(df2, educ_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_educ_imp <- make_year_graph(educ_imp)
plot_educ_imp
ggsave("EDA Images/educ_time.png", device = "png")
# hardWork_imp ------------
prop_df1 <- compute_props(df1, hardWork_imp, wgt_comb)
prop_df2 <- compute_props(df2, hardWork_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_hardWork_imp <- make_year_graph(hardWork_imp)
plot_hardWork_imp
ggsave("EDA Images/hardwork_time.png", device = "png")
# rightPpl_imp ------------
prop_df1 <- compute_props(df1, rightPpl_imp, wgt_comb)
prop_df2 <- compute_props(df2, rightPpl_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_rightPpl_imp <- make_year_graph(rightPpl_imp)
plot_rightPpl_imp
ggsave("EDA Images/rightPpl_imp_time.png", device = "png")
# political_imp ------------
prop_df1 <- compute_props(df1, political_imp, wgt_comb)
prop_df2 <- compute_props(df2, political_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_political_imp <- make_year_graph(political_imp)
plot_political_imp
ggsave("EDA Images/political_imp_time.png", device = "png")
# race_imp ------------
prop_df1 <- compute_props(df1, race_imp, wgt_comb)
prop_df2 <- compute_props(df2, race_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_race_imp <- make_year_graph(race_imp)
plot_race_imp
ggsave("EDA Images/race_imp_time.png", device = "png")
# religion_imp ------------
prop_df1 <- compute_props(df1, religion_imp, wgt_comb)
prop_df2 <- compute_props(df2, religion_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_religion_imp <- make_year_graph(religion_imp)
plot_religion_imp
ggsave("EDA Images/religion_imp_time.png", device = "png")
# sex_imp ------------
prop_df1 <- compute_props(df1, sex_imp, wgt_comb)
prop_df2 <- compute_props(df2, sex_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 , prop_df2)
# stacked + percent barchart
plot_sex_imp <- make_year_graph(sex_imp)
plot_sex_imp
ggsave("EDA Images/sex_imp_time.png", device = "png")
# arrange the plots in a 3 by 3 grid using arrangeGrob
targets_w_na <- grid.arrange(arrangeGrob(plot_wealth_imp, plot_parents_imp, plot_educ_imp, ncol = 3),
arrangeGrob(plot_hardWork_imp, plot_rightPpl_imp, plot_political_imp, ncol = 3),
arrangeGrob(plot_race_imp, plot_religion_imp, plot_sex_imp, ncol = 3),
nrow = 3)
ggsave("EDA Images/Combined Year Plot.png", plot = targets_w_na)
# wealth_imp ------------
sub_df1 <- subset(df1, wealth_imp != "No Response")
prop_df1 <- compute_props(sub_df1, wealth_imp)
# wealth_imp ------------
sub_df1 <- subset(df1, wealth_imp != "No Response")
prop_df1 <- compute_props(sub_df1, wealth_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, wealth_imp, wgt_comb)
# wealth_imp ------------
sub_df1 <- subset(df1, wealth_imp != "No Response")
sub_df2 <- subset(df2, wealth_imp != "No Response")
prop_df1 <- compute_props(sub_df1, wealth_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, wealth_imp, wgt_comb)
# wealth_imp ------------
sub_df1 <- subset(df1, wealth_imp != "No Response")
sub_df2 <- subset(df2, wealth_imp != "No Response")
prop_df1 <- compute_props(sub_df1, wealth_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, wealth_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_wealth_imp <- make_year_graph(wealth_imp)
plot_wealth_imp
plot_wealth_imp
ggsave("EDA Images/wealth_time_nomissing.png", device = "png")
View(df)
load("cleaned_data.Rdata")
View(df)
# wealth_imp ------------
sub_df1 <- subset(df1, wealth_imp != "No Response")
sub_df2 <- subset(df2, wealth_imp != "No Response")
prop_df1 <- compute_props(sub_df1, wealth_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, wealth_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_wealth_imp <- make_year_graph(wealth_imp)
plot_wealth_imp
ggsave("EDA Images/wealth_time_nomissing.png", device = "png")
# parents_imp ------------
sub_df1 <- subset(df1, parents_imp != "No Response")
sub_df2 <- subset(df2, parents_imp != "No Response")
prop_df1 <- compute_props(sub_df1, parents_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, parents_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_parents_imp <- make_year_graph(parents_imp)
plot_parents_imp
ggsave("EDA Images/parents_imp_nomissing.png", device = "png")
# educ_imp ------------
sub_df1 <- subset(df1, educ_imp != "No Response")
sub_df2 <- subset(df2, educ_imp != "No Response")
prop_df1 <- compute_props(sub_df1, educ_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, educ_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_educ_imp <- make_year_graph(educ_imp)
plot_educ_imp
ggsave("EDA Images/educ_imp_nomissing.png", device = "png")
# hardWork_imp ------------
sub_df1 <- subset(df1, hardWork_imp != "No Response")
sub_df2 <- subset(df2, hardWork_imp != "No Response")
prop_df1 <- compute_props(sub_df1, hardWork_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, hardWork_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_hardWork_imp <- make_year_graph(hardWork_imp)
plot_hardWork_imp
ggsave("EDA Images/hardWork_imp_nomissing.png", device = "png")
# rightPpl_imp ------------
sub_df1 <- subset(df1, rightPpl_imp != "No Response")
sub_df2 <- subset(df2, rightPpl_imp != "No Response")
prop_df1 <- compute_props(sub_df1, rightPpl_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, rightPpl_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_rightPpl_imp <- make_year_graph(hardWork_imp)
plot_rightPpl_imp
# wealth_imp ------------
sub_df1 <- subset(df1, wealth_imp != "No Response")
sub_df2 <- subset(df2, wealth_imp != "No Response")
prop_df1 <- compute_props(sub_df1, wealth_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, wealth_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_wealth_imp <- make_year_graph(wealth_imp)
plot_wealth_imp
ggsave("EDA Images/wealth_time_nomissing.png", device = "png")
# parents_imp ------------
sub_df1 <- subset(df1, parents_imp != "No Response")
sub_df2 <- subset(df2, parents_imp != "No Response")
prop_df1 <- compute_props(sub_df1, parents_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, parents_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_parents_imp <- make_year_graph(parents_imp)
plot_parents_imp
ggsave("EDA Images/parents_imp_nomissing.png", device = "png")
# educ_imp ------------
sub_df1 <- subset(df1, educ_imp != "No Response")
sub_df2 <- subset(df2, educ_imp != "No Response")
prop_df1 <- compute_props(sub_df1, educ_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, educ_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_educ_imp <- make_year_graph(educ_imp)
plot_educ_imp
ggsave("EDA Images/educ_imp_nomissing.png", device = "png")
# hardWork_imp ------------
sub_df1 <- subset(df1, hardWork_imp != "No Response")
sub_df2 <- subset(df2, hardWork_imp != "No Response")
prop_df1 <- compute_props(sub_df1, hardWork_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, hardWork_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_hardWork_imp <- make_year_graph(hardWork_imp)
plot_hardWork_imp
ggsave("EDA Images/hardWork_imp_nomissing.png", device = "png")
# rightPpl_imp ------------
sub_df1 <- subset(df1, rightPpl_imp != "No Response")
sub_df2 <- subset(df2, rightPpl_imp != "No Response")
prop_df1 <- compute_props(sub_df1, rightPpl_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, rightPpl_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_rightPpl_imp <- make_year_graph(rightPpl_imp)
plot_rightPpl_imp
ggsave("EDA Images/hardWork_imp_nomissing.png", device = "png")
# political_imp ------------
sub_df1 <- subset(df1, political_imp != "No Response")
sub_df2 <- subset(df2, political_imp != "No Response")
prop_df1 <- compute_props(sub_df1, political_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, political_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_political_imp <- make_year_graph(political_imp)
plot_political_imp
ggsave("EDA Images/political_imp_nomissing.png", device = "png")
# race_imp ------------
sub_df1 <- subset(df1, race_imp != "No Response")
sub_df2 <- subset(df2, race_imp != "No Response")
prop_df1 <- compute_props(sub_df1, race_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, race_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_race_imp <- make_year_graph(race_imp)
plot_race_imp
ggsave("EDA Images/race_imp_nomissing.png", device = "png")
# religion_imp ------------
sub_df1 <- subset(df1, religion_imp != "No Response")
sub_df2 <- subset(df2, religion_imp != "No Response")
prop_df1 <- compute_props(sub_df1, religion_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, religion_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_religion_imp <- make_year_graph(religion_imp)
plot_religion_imp
ggsave("EDA Images/religion_imp_nomissing.png", device = "png")
# sex_imp ------------
sub_df1 <- subset(df1, sex_imp != "No Response")
sub_df2 <- subset(df2, sex_imp != "No Response")
prop_df1 <- compute_props(sub_df1, sex_imp, wgt_comb)
prop_df2 <- compute_props(sub_df2, sex_imp, wgt_comb)
prop_df <- bind_rows(prop_df1 %>% mutate(variable = "1987"),
prop_df2 %>% mutate(variable = "2021"))
prop_df <- bind_rows(prop_df1 , prop_df2)
plot_sex_imp <- make_year_graph(sex_imp)
plot_sex_imp
ggsave("EDA Images/sex_imp_nomissing.png", device = "png")
# arrange the plots in a 3 by 3 grid using arrangeGrob
targets_wo_na <- grid.arrange(arrangeGrob(wealth_no_na, parents_no_na, educ_no_na, ncol = 3),
arrangeGrob(harkwork_no_na, rightPpl_no_na, political_no_na, ncol = 3),
arrangeGrob(race_no_na, religion_no_na, sex_no_na, ncol = 3),
nrow = 3)
# arrange the plots in a 3 by 3 grid using arrangeGrob
targets_wo_na <- grid.arrange(arrangeGrob(plot_wealth_imp, plot_parents_imp, plot_educ_imp, ncol = 3),
arrangeGrob(plot_hardWork_imp, plot_rightPpl_imp, plot_political_imp, ncol = 3),
arrangeGrob(plot_race_imp, plot_religion_imp, plot_sex_imp, ncol = 3),
nrow = 3)
ggsave("EDA Images/targets_without_missing.png", plot = targets_wo_na)
