}
}
for (q in df_variables){
for (c in df_covariates){
df_cov_temp <- df_covariates
df_cov_temp$var <- q ## race for now
print('i')
df_cov_temp <- df %>% dplyr::select(q, race, vpsu,wgt_comb,vstrat) %>%
filter({{c}} != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~{{q}}, ~{{c}}+year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in df_variables){
for (c in df_covariates){
df_cov_temp <- df_covariates
df_cov_temp$var <- q ## race for now
df_cov_temp <- df %>% dplyr::select(q, race, vpsu,wgt_comb,vstrat) %>%
filter(c != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~{{q}}, ~{{c}}+year, design = surv.des, FUN = svymean)
myresults
}
}
df_cov_temp <- df_covariates
df_cov_temp$var <- q ## race for now
df_cov_temp <- df_covariates
df_cov_temp$var <- q ## race for now
View(df_cov_temp)
for (q in df_variables){
for (c in df_covariates){
df_cov_temp <- df_covariates
df_cov_temp$var <- q ## race for now
df_cov_temp <- df %>% dplyr::select(var, c, vpsu,wgt_comb,vstrat) %>%
filter(c != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in df_variables){
for (c in df_covariates){
df_cov_temp <- df %>% dplyr::select({{q}}, {{c}}, vpsu,wgt_comb,vstrat) %>%
filter(c != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in df_variables){
for (c in df_covariates){
df_cov_temp <- df %>% dplyr::select({{q}}, {{c}}, year, vpsu,wgt_comb,vstrat) %>%
filter(c != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in df_variables){
for (c in df_covariates){
print({{c}})
df_cov_temp <- df %>% dplyr::select({{q}}, {{c}}, year, vpsu,wgt_comb,vstrat) %>%
filter(c != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in df_variables){
for (c in df_covariates){
print({{c}})
df_cov_temp <- df %>% dplyr::select(get(q), get(c), year, vpsu,wgt_comb,vstrat) %>%
filter(c != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (c in df_covariates){
print({{c}})
df_cov_temp <- df %>% dplyr::select(get(q), get(c), year, vpsu,wgt_comb,vstrat) %>%
filter(get(c) != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
for (q in colnames(df_variables)){
for (c in df_covariates){
print({{c}})
df_cov_temp <- df %>% dplyr::select(get(q), get(c), year, vpsu,wgt_comb,vstrat) %>%
filter(get(c) != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
print({{c}})
df_cov_temp <- df %>% dplyr::select(get(q), get(c), year, vpsu,wgt_comb,vstrat) %>%
filter(get(c) != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
print({{c}})
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat) %>%
filter(get(c) != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
## Testing group differences
df_covariates <- df %>% dplyr::select(wrkstat, marital, age, race, educ, sex, born, income,
region, partyid, relig, zodiac, vstrat, vpsu, wgt_comb)
df_variables <- df %>% dplyr::select(wealth_imp, sex_imp, parents_imp, educ_imp, hardWork_imp, rightPpl_imp,
political_imp, race_imp, religion_imp)
## Loop through questions
ques <- c(wealth_imp, sex_imp, parents_imp, educ_imp, hardWork_imp, rightPpl_imp,
political_imp, race_imp, religion_imp)
cov <- c(wrkstat, marital, age, race, educ, sex, born, income,
region, partyid, relig, zodiac)
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
print(c)
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat) %>%
filter(get(c) != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
## Testing group differences
df_covariates <- df %>% dplyr::select(wrkstat, marital, age, race, educ, sex, born, income,
region, partyid, relig, zodiac, vstrat, vpsu, wgt_comb)
df_variables <- df %>% dplyr::select(wealth_imp, sex_imp, parents_imp, educ_imp, hardWork_imp, rightPpl_imp,
political_imp, race_imp, religion_imp)
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
print(c)
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat) %>%
filter(get(c) != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
print(c)
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat) %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
print("i")
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
print("i")
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c +year, design = surv.des, FUN = svymean)
myresults
}
}
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ c + year, design = surv.des, FUN = svymean)
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
print("i")
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ get(c) + year, design = surv.des, FUN = svymean)
myresults
}
}
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~var, ~ get(c) + year, design = surv.des, FUN = svymean)
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
myresults
}
}
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
myresults <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
View(res)
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~q, ~ c + year, design = surv.des, FUN = svymean)
names(res)[1] <- q
names(res)[3] <- c
names(res)[1] <- c
names(res)[3] <- q
test <- ggplot(res, aes(colnames(res))) +
geom_col
test <- ggplot(res, aes(colnames(res))) +
geom_col()
test
library(caTools)
install.packages("caTools")
library(caTools)
# create a data frame
df <- data.frame(x = c("A", "B", "C"), y = c(1, 2, 3))
# save the data frame as a PNG image
png("mydata.png")
print(df)
dev.off()
setwd("~/Desktop/DSI Spring/Stats/DATA-2020")
# save the data frame as a PNG image
png("mydata.png")
print(df)
dev.off()
load('cleaned_data.Rdata')
## Testing group differences
df_covariates <- df %>% dplyr::select(wrkstat, marital, age, race, educ, sex, born, income,
region, partyid, relig, zodiac, vstrat, vpsu, wgt_comb)
df_variables <- df %>% dplyr::select(wealth_imp, sex_imp, parents_imp, educ_imp, hardWork_imp, rightPpl_imp,
political_imp, race_imp, religion_imp)
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
}
}
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
View(res)
## Testing group differences
df_covariates <- df %>% dplyr::select(wrkstat, marital, age, race, educ, sex, born, income,
region, partyid, relig, zodiac)
df_variables <- df %>% dplyr::select(wealth_imp, sex_imp, parents_imp, educ_imp, hardWork_imp, rightPpl_imp,
political_imp, race_imp, religion_imp)
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
}
}
View(res)
ggplot(res, aes(x = income, y = se, fill = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = se - 1.96 * se/sqrt(3), ymax = se + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year, ncol = 1) +
xlab("Income") +
ylab("Standard error") +
scale_fill_manual(values = c("blue", "red"), labels = c("Male", "Female"))
ggplot(res, aes(x = income, y = se, fill = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = se - 1.96 * se/sqrt(3), ymax = se + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
ggplot(res, aes(x = income, y = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = se - 1.96 * se/sqrt(3), ymax = se + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
ggplot(res, aes(x = income, y = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = sex_imp - 1.96 * se/sqrt(3), ymax = sex_imp + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g <- ggplot(res, aes(x = income, y = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = sex_imp - 1.96 * se/sqrt(3), ymax = sex_imp + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
g <- ggplot(res, aes(x = c, y = q)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = q - 1.96 * se/sqrt(3), ymax = q + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
qq <- df_cov_temp[[q]]
g <- ggplot(res, aes(x = c, y = q)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
qq <- res[[q]]
g <- ggplot(res, aes(x = c, y = q)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
g <- ggplot(res, aes(x = c, y = q, group = c)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
g <- ggplot(res, aes(x = income, y = q, group = c)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
qq <- res[[q]]
g <- ggplot(res, aes(x = c, y = q)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
g <- ggplot(res, aes(x = region, y = q)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
g <- ggplot(res, aes(x = region, y = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
cc <- res[[c]]
g <- ggplot(res, aes(x = cc, y = sex_imp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab("Income") +
ylab("Standard error")
g
ggsave("test")
ggsave("test.png")
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
title(q)
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
labs(title = q)
ggsave("test.png")
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
labs(title = paste0(q, ", " c))
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
labs(title = paste0(q, ", ", c))
ggsave("test.png")
View(res)
ggsave(paste0(q, "/test.png"))
ggsave(paste0("Group Differences/", q, "/test.png"))
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
qq <- res[[q]]
cc <- res[[c]]
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
labs(title = paste0(q, ", ", c))
ggsave(paste0("Group Differences/", q, "/test.png"))
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
qq <- res[[q]]
cc <- res[[c]]
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
labs(title = paste0(q, ", ", c))
ggsave(paste0("Group Differences/", q, "/", c, "test.png"))
}
}
for (q in colnames(df_variables)){
for (c in colnames(df_covariates)){
df_cov_temp <- df %>% dplyr::select(q, c, year, vpsu,wgt_comb,vstrat)
df_cov_temp <- df_cov_temp %>%
filter(df[[c]] != ".i:  Inapplicable") %>% drop_na()
surv.des <- svydesign(data = df_cov_temp, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
res <- svyby(~get(q), ~ get(c) + year, design = surv.des, FUN = svymean)
names(res)[1] <- c
names(res)[3] <- q
qq <- res[[q]]
cc <- res[[c]]
g <- ggplot(res, aes(x = cc, y = qq)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = qq - 1.96 * se/sqrt(3), ymax = qq + 1.96 * se/sqrt(3)), position = position_dodge(width = 0.9), width = 0.2) +
facet_wrap(~ year,) +
xlab(c) +
labs(title = paste0(q, ", ", c))
ggsave(paste0("Group Differences/", q, "/", c, ".png"))
}
}
library(ggthemes)
