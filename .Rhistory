library(tidyverse)
library(readxl)
library(dplyr)
library(ggplot2)
# setwd("~/Desktop/DSI Spring/Stats/Final Project")
ff_data <- read_dta('cleaned_data.dta')
library(haven)
ff_data <- read_dta('cleaned_data.dta')
ff_data <- read_dta('cleaned_data.Rdata')
survey_clean <- load('cleaned_data.Rdata')
head(survey_clean)
head(survey_clean)
survey_clean.head()
survey_clean
View(df)
survey_df <- as.data.frame(survey_clean)
survey_df
survey_clean[1]
survey_clean[2]
df
load('cleaned_data.Rdata')
df
head(df)
View(df)
library(survey)
install.packages("survey")
library(survey)
View(df)
surv.des <- svydesign(data = df, ids = ~year, weights = wgt_comb)
surv.des <- svydesign(data = df, ids = ~df$year, weights = df$wgt_comb)
View(surv.des)
svyttest(formula = df$wealth_imp ~ df$year, design = surv.des)
View(surv.des)
View(surv.des)
surv.des <- svydesign(data = df, ids = ~1, weights = df$wgt_comb)
svyttest(formula = df$wealth_imp ~ df$year, design = surv.des)
surv.des <- svydesign(data = df, ids = ~1, weights = ~df$wgt_comb)
svyttest(formula = df$wealth_imp ~ df$year, design = surv.des)
dummy_data_age <- sample(c(18:90), 100, replace = TRUE)
dummy_data_income <- sample(c(0:100000), 100, replace = TRUE)
dummy_data_gender <- sample(c("Male", "Female"), 100, replace = TRUE)
dummy_data_gender <- as.integer(factor(dummy_data_gender))
dummy_data_region <- sample(c("North", "East", "South", "West"), 100, replace = TRUE)
dummy_data_region <- as.integer(factor(dummy_data_region))
dummy_data_age <- tibble::enframe(dummy_data_age, "unit", "age") %>% select("age")
dummy_data_income <- tibble::enframe(dummy_data_income, "unit", "income") %>% select("income")
dummy_data_gender <- tibble::enframe(dummy_data_gender, "unit", "gender") %>% select("gender")
dummy_data_region <- tibble::enframe(dummy_data_region, "unit", "region") %>% select("region")
dummy_data_df <- bind_cols(dummy_data_age, dummy_data_income, dummy_data_gender, dummy_data_region)
dummy_data_df
View(dummy_data_df)
surv.des <- svydesign(data = df, ids = ~1, weights = ~wgt_comb)
svyttest(formula = df$wealth_imp ~ df$year, design = surv.des)
svyttest(formula = wealth_imp ~ year, design = surv.des)
svyttest(formula = sex_imp ~ year, design = surv.des)
ttest <- svyttest(formula = sex_imp ~ year, design = surv.des)
surv.des <- svydesign(data = df, ids = ~year, weights = ~wgt_comb)
ttest <- svyttest(formula = sex_imp ~ year, design = surv.des)
ttest$p.value
svyttest(formula = sex_imp ~ year, design = surv.des)
surv.des <- svydesign(data = df, ids = ~1, weights = ~wgt_comb)
ttest <- svyttest(formula = sex_imp ~ year, design = surv.des)
ttest$p.value
load('cleaned_data.Rdata')
head(df)
surv.des <- svydesign(data = df, ids = ~1, weights = ~wgt_comb)
ttest <- svyttest(formula = sex_imp ~ year, design = surv.des)
ttest$p.value
View(df)
colnames(df)
colnames(df)[-9:]
colnames(df)[-9:-1]
colnames(df)[-5:-1]
colnames(df)[-9:-1]
colnames(df)[-1:-9]
colnames(df)[0:-9]
colnames(df)[10:-9]
colnames(df)[10:12]
colnames(df)[15:12]
colnames(df)[15:18]
colnames(df)[19:25]
colnames(df)[20:29]
colnames(df)[20:28]
p_vals <- matrix(NA, 9, 1)
i <- 1
for(col in df[, 20:28]){
p_vals[i] <- svyttest(formula = col ~ year, design = surv.des)$p.value
i <- i + 1
}
for(col in colnames(df)[, 20:28]){
p_vals[i] <- svyttest(formula = col ~ year, design = surv.des)$p.value
i <- i + 1
}
p_vals <- matrix(NA, 9, 1)
i <- 1
for(col in colnames(df)[20:28]){
p_vals[i] <- svyttest(formula = col ~ year, design = surv.des)$p.value
i <- i + 1
}
p_vals <- matrix(NA, 9, 1)
i <- 1
for(col in colnames(df)[20:28]){
print(col)
p_vals[i] <- svyttest(formula = col ~ year, design = surv.des)$p.value
i <- i + 1
}
ttest <- svyttest(formula = sex_imp + wealth_imp ~ year, design = surv.des)
ttest
surv.des$variables[9]
p_vals <- matrix(NA, 9, 1)
i <- 1
for(col_id in 20:28){
print(col)
p_vals[i] <- svyttest(formula = surv.des$variables[col_id] ~ year, design = surv.des)$p.value
i <- i + 1
}
ttest <- svyttest(formula = 3 ~ year, design = surv.des)
svyttest(formula = wealth_imp ~ year, design = surv.des)
svyttest(formula = sex_imp ~ year, design = surv.des)
svyttest(formula = wealth_imp ~ year, design = surv.des)
svyttest(formula = sex_imp ~ year, design = surv.des)
svyttest(formula = parents_imp ~ year, design = surv.des)
svyttest(formula = educ_imp ~ year, design = surv.des)
svyttest(formula = hardWork_imp ~ year, design = surv.des)
svyttest(formula = rightPpl_imp ~ year, design = surv.des)
svyttest(formula = political_imp ~ year, design = surv.des)
svyttest(formula = race_imp ~ year, design = surv.des)
svyttest(formula = religion_imp ~ year, design = surv.des)
View(p_vals)
svyby(formula = wealth_imp ~ year, by = income, design = surv.des, FUN = svyttest)
svyby(formula = wealth_imp ~ year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = ~wealth_imp ~ year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = wealth_imp ~ year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = c(wealth_imp, year), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = c(~wealth_imp, ~year), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = ~wealth_imp+ ~year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = ~wealth_imp + year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = ~wealth_imp, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = wealth_imp, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = wealth_imp ~ year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = ~wealth_imp ~ year, by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = matrix(c(~wealth_imp, ~year)), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = matrix(wealth_imp ~year)), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = matrix(wealth_imp ~year), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = vector(wealth_imp ~ year), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = vector(wealth_imp, year), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = vector(~wealth_imp, year), by = ~income, design = surv.des, FUN = svyttest)
svyby(formula = vector(~wealth_imp, ~year), by = ~income, design = surv.des, FUN = svyttest)
a <- svyttest(formula = wealth_imp ~ year, design = surv.des)
ftable(a)
