#scale data
df <- df %>% select(1:50)
df_S <- suppressWarnings(as.data.frame(sapply(df, as.numeric)))
df_S <- suppressWarnings(as.data.frame(sapply(df, as.numeric)))
# df_S <- df %>% drop_na()
df_S <- scale(df)
df <- df %>% drop_na()
dmat <- data.matrix(df)
#FA, no rotation
fa1 <- factanal(factors=5,covmat=cov(dmat), rotation='none')
fa1
#FA with rotation
fa2 <- factanal(factors=5,covmat=cov(dmat), rotation='varimax')
fa2
#FA with rotation
fa3 <- factanal(factors=6,covmat=cov(dmat), rotation='varimax')
fa3
#heatmap
temp3 <- as.matrix(fa2$loadings[,1:5])
temp3 <- melt(temp3)
ggplot(temp3, aes(x = Var2, y = Var1, fill = value)) + geom_tile(color="black") +
scale_fill_gradient2(low = "darkmagenta",mid="white",high = "chartreuse4") +
xlab('Factor') + ylab('Covariate') + ggtitle('Factor components')
df_S <- scale(df)
df <- df %>% drop_na()
df_S <- scale(df)
df <- suppressWarnings(as.data.frame(sapply(df, as.numeric)))
df <- df %>% drop_na()
df_S <- scale(df)
df <- suppressWarnings(as.data.frame(sapply(df, as.numeric)))
df <- df %>% drop_na()
df_S <- scale(df)
pca <- prcomp(df_S)
summary(pca)
#bar plot
prop_variance <- summary(pca)$importance[2,1:10]
temp1 <- as.data.frame(prop_variance)
temp1['PC'] <- c(1:10)
p <- ggplot(temp1) + geom_col(aes(x=PC,y=prop_variance)) +
ggtitle('PVE')
p
#heatmap
temp2 <- pca$rotation[,1:5]
temp2 <- melt(temp2)
ggplot(temp2, aes(x = Var2, y = Var1, fill = value)) + geom_tile(color="black") +
scale_fill_gradient2(low = "darkmagenta",mid="white",high = "chartreuse4") +
xlab('PC') + ylab('Covariates') + ggtitle('PCA components')
library(tidyverse)
library(tidyr)
library(glmnet)
library(survey)
load(file='cleaned_data.Rdata')
setwd("~/2022-2023/Spring/DATA2020/Project/DATA-2020")
library(tidyverse)
library(tidyr)
library(glmnet)
library(survey)
load(file='cleaned_data.Rdata')
names <- c(2:3, 6:13)
df[,names] <- lapply(df[,names] , factor)
View(df)
View(df)
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
df_relig <- df %>% drop_na(religion_imp)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
summary(model_1987)
model_2021 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 2021))
summary(model_2021)
View(df)
View(df)
df <- within(df, relig <- relevel(relig, ref = 'missing'))
df <- within(df, marital <- relevel(marital, ref ='missing'))
df <- within(df, partyid <- relevel(partyid, ref ='missing'))
df <- within(df, partyid <- relevel(workstat, ref ='missing'))
df <- within(df, partyid <- relevel(wrkstat, ref ='missing'))
df <- within(df, partyid <- relevel(income, ref ='missing'))
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
df_relig <- df %>% drop_na(religion_imp)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
summary(model_1987)
model_2021 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 2021))
summary(model_2021)
df <- within(df, relig <- relevel(relig, ref = 'missing'))
df <- within(df, marital <- relevel(marital, ref ='missing'))
df <- within(df, partyid <- relevel(partyid, ref ='missing'))
df <- within(df, wrkstat <- relevel(wrkstat, ref ='missing'))
df <- within(df, income <- relevel(income, ref ='missing'))
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
df_relig <- df %>% drop_na(religion_imp)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
summary(model_1987)
model_2021 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 2021))
summary(model_2021)
df <- within(df, sex <- relevel(sex, ref ='missing'))
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
df_relig <- df %>% drop_na(religion_imp)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
summary(model_1987)
model_2021 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 2021))
summary(model_2021)
install.packages('WeMix')
library(WeMix)
#mixed effects model - religion
#no strat variable
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = wgt_comb, family = 'quasibinomial')
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = df$wgt_comb, family = 'quasibinomial')
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = df_relig$wgt_comb, family = 'quasibinomial')
#mixed effects model - religion
#no strat variable
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = c(wgt_comb), family = 'quasibinomial')
View(df_relig)
View(df_relig)
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = c(wtss_all,wtssnrps), family = 'quasibinomial')
#mixed effects model - religion
#no strat variable
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = c(wtssall,wtssnrps), family = 'quasibinomial')
mixed_relig <- mix(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = c(df_relig$wtssall,df_relig$wtssnrps), family = 'quasibinomial')
#mixed effects model - religion
#no strat variable
mixed_relig <- glmer(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = wgt_comb, family = 'quasibinomial')
#mixed effects model - religion
#no strat variable
mixed_relig <- glmer(formula = religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac + (1|year), data = df_relig, weights = wgt_comb, family = 'binomial')
binned.resids <- function (x, y, nclass=sqrt(length(x))){
breaks.index <- floor(length(x)*(1:(nclass-1))/nclass)
breaks <- c (-Inf, sort(x)[breaks.index], Inf)
output <- NULL
xbreaks <- NULL
x.binned <- as.numeric (cut (x, breaks))
for (i in 1:nclass){
items <- (1:length(x))[x.binned==i]
x.range <- range(x[items])
xbar <- mean(x[items])
ybar <- mean(y[items])
n <- length(items)
sdev <- sd(y[items])
output <- rbind (output, c(xbar, ybar, n, x.range, 2*sdev/sqrt(n)))
}
colnames (output) <- c ("xbar", "ybar", "n", "x.lo", "x.hi", "2se")
return (list (binned=output, xbreaks=xbreaks))
}
pred_1987 <- model_1987 %>% predict(df_relig, type = "response")
pred_1987 <- model_1987 %>% predict(df, type = "response")
df_relig <- df %>% drop_na(religion_imp)
surv.des <- svydesign(data = df_relig, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
#logistic regressions - religion
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
summary(model_1987)
model_2021 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 2021))
summary(model_2021)
#binned residuals
binned.resids <- function (x, y, nclass=sqrt(length(x))){
breaks.index <- floor(length(x)*(1:(nclass-1))/nclass)
breaks <- c (-Inf, sort(x)[breaks.index], Inf)
output <- NULL
xbreaks <- NULL
x.binned <- as.numeric (cut (x, breaks))
for (i in 1:nclass){
items <- (1:length(x))[x.binned==i]
x.range <- range(x[items])
xbar <- mean(x[items])
ybar <- mean(y[items])
n <- length(items)
sdev <- sd(y[items])
output <- rbind (output, c(xbar, ybar, n, x.range, 2*sdev/sqrt(n)))
}
colnames (output) <- c ("xbar", "ybar", "n", "x.lo", "x.hi", "2se")
return (list (binned=output, xbreaks=xbreaks))
}
pred_1987 <- model_1987 %>% predict(df_relig, type = "response")
df_relig <- df %>% drop_na(religion_imp)
pred_1987 <- model_1987 %>% predict(df_relig, type = "response")
odds_ratio <- function (coef, se, alpha){
odds <- exp(coef)  #calculate from data set??
lower <- exp(coef + qnorm(alpha/2)*se)
upper <- exp(coef - qnorm(alpha/2)*se)
return (list(odds=odds, lower=lower, upper=upper))
}
odds_ratio(coef(summary(model_1987))["age","Estimate"],coef(summary(model))["Age","Std. Error"],0.05)
odds_ratio(coef(summary(model_1987))["age","Estimate"],coef(summary(model_1987))["Age","Std. Error"],0.05)
odds_ratio(coef(summary(model_1987))["age","Estimate"],coef(summary(model_1987))["age","Std. Error"],0.05)
odds_ratio(coef(summary(model_2021))["age","Estimate"],coef(summary(model_2021))["age","Std. Error"],0.05)
odds_ratio(coef(summary(model_1987))["sex","Estimate"],coef(summary(model_1987))["sex","Std. Error"],0.05)
summary(model_1987)
odds_ratio(coef(summary(model_1987))["educ","Estimate"],coef(summary(model_1987))["educ","Std. Error"],0.05)
odds_ratio(coef(summary(model_2021))["educ","Estimate"],coef(summary(model_2021))["educ","Std. Error"],0.05)
pred_2021 <- model_2021 %>% predict(df_relig, type = "response")
pred_2021 <- model_2021 %>% predict(df_relig)
pred_1987 <- model_1987 %>% predict(filter(df_relig,year==1987), type = "response")
pred_1987 <- model_1987 %>% predict(df_relig1987, type = "response")
df_relig1987 <- df_relig %>%
filter(year == 1987)
pred_1987 <- model_1987 %>% predict(df_relig1987, type = "response")
pred_1987 <- model_1987 %>% predict(filter(df_relig,year==1987))
pred_1987 <- model_1987 %>% predict(drop_na(filter(df_relig,year==1987)), type = "response")
df_relig1987 <- df_relig %>% filter(religion_imp) %>% drop_na()
df_relig1987 <- df_relig %>% filter(year==1987) %>% drop_na()
pred_1987 <- model_1987 %>% predict(df_relig1987, type = "response")
View(df_relig1987)
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
df_relig <- df %>% drop_na(religion_imp)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
df_relig1987 <- df_relig %>% filter(year==1987) %>% drop_na()
pred_1987 <- model_1987 %>% predict(df_relig1987, type = "response")
#VIF
vif(model_1987)
#VIF
VIF(model_1987)
install.packages('regclass')
library(regclass)
#VIF
VIF(model_1987)
install.packages('car')
library(car)
#VIF
vif(model_1987)
#VIF
vif(model_2021)
#VIF
vif(model_2021, data=df_relig)
#VIF
vif(model_1987, data=df_relig1987)
#VIF
car::vif(model_1987)
pred_1987 <- model_1987 %>% predict(df_relig1987, type = "response")
pred_1987 <- model_1987 %>% predict(filter(df,year=1987), type = "response")
pred_1987 <- model_1987 %>% predict(filter(df,year==1987), type = "response")
pred_1987 <- model_1987 %>% predict(drop_na(filter(df,year==1987)), type = "response")
pred_1987 <- model_1987 %>% predict(drop_na(filter(surv.des,year==1987)), type = "response")
df_debug1987 <- df %>% filter(year==1987) %>% drop_na()
for(i in 1:nrow(df_debug1987)){
m=model_1987 %>% predict(df_debug[1:i], type = "response")
}
df_debug1987 <- df %>% filter(year==1987) %>% drop_na()
for(i in 1:nrow(df_debug1987)){
m=model_1987 %>% predict(df_debug1987[1:i], type = "response")
}
for(i in 1:nrow(df_debug1987)){
df_debug1987[1:i]
m=model_1987 %>% predict(df_debug1987[1:i], type = "response")
}
for(i in 1:nrow(df_debug1987)){
print(df_debug1987[i])
m=model_1987 %>% predict(df_debug1987[1:i], type = "response")
}
for(i in 1:nrow(df_debug1987)){
print(df_debug1987[i,])
m=model_1987 %>% predict(df_debug1987[1:i,], type = "response")
}
df = subset(df, select = -c(wtssall,wtssnrps) )
df_debug1987 <- df %>% filter(year==1987) %>% drop_na()
for(i in 1:nrow(df_debug1987)){
print(df_debug1987[i,])
m=model_1987 %>% predict(df_debug1987[1:i,], type = "response")
}
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
df_debug1987 <- df %>% filter(year==1987) %>% drop_na()
for(i in 1:nrow(df_debug1987)){
print(df_debug1987[i,])
m=model_1987 %>% predict(df_debug1987[1:i,], type = "response")
}
str(df)
nums <- c(14,15)
df[,nums] <- lapply(df[,nums] , as.numeric)
str(df)
nums <- c(14,16)
df[,nums] <- lapply(df[,nums] , as.numeric)
str(df)
surv.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
df_debug1987 <- df %>% filter(year==1987) %>% drop_na()
for(i in 1:nrow(df_debug1987)){
print(df_debug1987[i,])
m=model_1987 %>% predict(df_debug1987[1:i,], type = "response")
}
predict(model_1987,surv.des)
p <- model_1987 %>% predict(surv.des)
p <- model_1987 %>% predict()
p <- model_1987 %>% predict(surv.des[0])
p <- model_1987 %>% predict(surv.des[1])
surv.des
p <- model_1987 %>% predict(type=response)
p <- model_1987 %>% predict(type='response')
p <- model_1987 %>% predict(newdata = df_debug1987,type='response')
p <- model_1987 %>% predict(newdata = df_debug1987)
install.packages('svydiag')
install.packages('svydiags')
library(svydiags)
res=svystdres(model_1987)
res=svystdres(model_1987,doplot=TRUE)
res
svystdres(model_1987,doplot=TRUE)
dim(res[1])
res[1]
len(res[1])
res_1987 = unname(svystdres(model_1987,doplot=TRUE)[1])
res_1987
res_1987 = as.numeric(svystdres(model_1987,doplot=TRUE)[1])
res_1987 <- svystdres(model_1987,doplot=TRUE)[1]
res_1987 <- unname(res_1987)
names(res_1987) <- NULL
res_1987
res_1987[1]
dim(res_1987)
dims(res_1987)
length(res_1987)
res_1987 <- svystdres(model_1987,doplot=TRUE)[1][1]
names(res_1987) <- NULL
res_1987
res_1987[1]
res_1987 <- svystdres(model_1987,doplot=TRUE)[[1]][1]
names(res_1987) <- NULL
length(res_1987)
res_1987 <- svystdres(model_1987,doplot=TRUE)[[1]][1]
res_1987 <- svystdres(model_1987,doplot=TRUE)[[1]]
names(res_1987) <- NULL
length(res_1987)
pred_1987 <- model_1987 %>% predict(model_1987$data), type = "response")
pred_1987 <- model_1987 %>% predict(model_1987$data, type = "response")
pred_1987 <- model_1987 %>% predict(model_1987$data)
br1987 <- as.data.frame(binned.resids (model_1987$data, res_1987, nclass=40)$binned)
binned.resids <- function (x, y, nclass=sqrt(length(x))){
breaks.index <- floor(length(x)*(1:(nclass-1))/nclass)
breaks <- c (-Inf, sort(x)[breaks.index], Inf)
output <- NULL
xbreaks <- NULL
x.binned <- as.numeric (cut (x, breaks))
for (i in 1:nclass){
items <- (1:length(x))[x.binned==i]
x.range <- range(x[items])
xbar <- mean(x[items])
ybar <- mean(y[items])
n <- length(items)
sdev <- sd(y[items])
output <- rbind (output, c(xbar, ybar, n, x.range, 2*sdev/sqrt(n)))
}
colnames (output) <- c ("xbar", "ybar", "n", "x.lo", "x.hi", "2se")
return (list (binned=output, xbreaks=xbreaks))
}
br1987 <- as.data.frame(binned.resids (model_1987$data, res_1987, nclass=40)$binned)
br1987 <- as.data.frame(binned.resids (model_1987$data$religion_imp, res_1987, nclass=40)$binned)
br1987 <- as.data.frame(binned.resids (model_1987$data$religion_imp, res_1987, nclass=10)$binned)
res_1987 <- svystdres(model_1987,doplot=TRUE)[[1]]
idx <- names(res_1987)
names(res_1987) <- NULL
br1987 <- as.data.frame(binned.resids (model_1987$data[idx]$religion_imp, res_1987, nclass=10)$binned)
br1987 <- as.data.frame(binned.resids (model_1987$data[,idx]$religion_imp, res_1987, nclass=10)$binned)
idx
idx <- as.numeric(names(res_1987))
idx <- as.numeric(names(res_1987))
idx
br1987 <- as.data.frame(binned.resids (model_1987$data$religion_imp, res_1987, nclass=10)$binned)
model_1987$data$religion_imp
br1987 <- as.data.frame(binned.resids (model_1987$data$religion_imp, res_1987, nclass=10)$binned)
model_1987$fitted.values
br1987 <- as.data.frame(binned.resids (model_1987$fitted.values, model_1987$residuals, nclass=10)$binned)
p1 <- ggplot(br, aes(br[,1],br[,2])) + geom_point() +
geom_line(aes(br[,1],br[,6]), color='gray') +
geom_line(aes(br[,1],-br[,6]), color='gray') + geom_hline(aes(yintercept=0)) +
xlab('Estimated  response') + ylab('Average Residual') +
ggtitle('Binned Residual Plot- 1987')
br <- as.data.frame(binned.resids (model_1987$fitted.values, model_1987$residuals, nclass=10)$binned)
p1 <- ggplot(br, aes(br[,1],br[,2])) + geom_point() +
geom_line(aes(br[,1],br[,6]), color='gray') +
geom_line(aes(br[,1],-br[,6]), color='gray') + geom_hline(aes(yintercept=0)) +
xlab('Estimated  response') + ylab('Average Residual') +
ggtitle('Binned Residual Plot- 1987')
p1
pred_2021 <- model_2021 %>% predict(df_relig, type = "response")
pred_2021 <- model_2021 %>% predict(model_2021$data, type = "response")
# pred_2021 <- model_2021 %>% predict(model_2021$data, type = "response")
br <- as.data.frame(binned.resids (model_2021$fitted.values, model_2021$residuals, nclass=40)$binned)
p2 <- ggplot(br, aes(br[,1],br[,2])) + geom_point() +
geom_line(aes(br[,1],br[,6]), color='gray') +
geom_line(aes(br[,1],-br[,6]), color='gray') + geom_hline(aes(yintercept=0)) +
xlab('Estimated  response') + ylab('Average Residual') +
ggtitle('Binned Residual Plot - 2021')
p2
# pred_1987 <- model_1987 %>% predict(model_1987$data, type = "response")  #this errors for some reason
br <- as.data.frame(binned.resids (model_1987$fitted.values, model_1987$residuals, nclass=40)$binned)
p1 <- ggplot(br, aes(br[,1],br[,2])) + geom_point() +
geom_line(aes(br[,1],br[,6]), color='gray') +
geom_line(aes(br[,1],-br[,6]), color='gray') + geom_hline(aes(yintercept=0)) +
xlab('Estimated  response') + ylab('Average Residual') +
ggtitle('Binned Residual Plot- 1987')
p1
#VIF --------------------------------------------------------------
vif(model_1987)
svyvif(model_1987)
#VIF --------------------------------------------------------------
df_comp <- drop_na(model_1987$data)
df_comp
View(df_comp)
View(df_comp)
#VIF --------------------------------------------------------------
df_comp <- drop_na(model_1987$data)
svyvif(model_1987, df_comp[1:13], df_comp$wgt_comb, vstrat)
svyvif(model_1987, df_comp[1:13], df_comp$wgt_comb, df_comp$vstrat)
svyvif(model_1987, df_comp[1:13], df_comp$wgt_comb)
w <- df_comp$wgt_comb
svyvif(model_1987, as.matrix(df_comp[1:13]), df_comp$wgt_comb)
X <- as.matrix(df_comp[1:13])
X
model_1987 <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=surv.des, family='quasibinomial', subset=(year == 1987))
summary(model_1987)
model_1987
temp <- model_1987.matrix(data = df_comp)
temp <- model.matrix(model_1987$formula, data = df_comp)
X <- as.matrix(temp[1:13])
w <- df_comp$wgt_comb
svyvif(model_1987, X, w)
w <- temp$wgt_comb
temp <- model.matrix(model_1987$formula, data = df_comp[1:13])
temp <- model.matrix(model_1987$formula, data = df_comp)
View(temp)
View(temp)
X <- temp[2:,]
X <- temp[, -2]
w <- df_comp$wgt_comb
svyvif(model_1987, X, w)
dims(X)
dim(X)
dim(w)
length(w)
dim(model_1987$data)
model_ary <- model.matrix(model_1987$formula, data = model_1987)
model_ary <- model.matrix(model_1987$formula, data = model_1987$data)
X <- model_ary[, -2]
w <- df_comp$wgt_comb
svyvif(model_1987, X, w)
X <- drop_na(model_ary[, -2])
temp_data <-drop_na(df[1:13,15,17,25])
#can't handle missing values and data must align between model and X
temp_data <-df[1:13,15,17,25]
#can't handle missing values and data must align between model and X
temp_data <-df[,1:13,15,17,25]
temp_data <- temp_data %>% drop_na()
survcomp.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
model_1987_comp <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=survcomp.des, family='quasibinomial', subset=(year == 1987))
model_2021_comp <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=survcomp.des, family='quasibinomial', subset=(year == 2021))
model_ary <- model.matrix(model_1987$formula, data = model_1987$data)
X <- model_ary[, -2]
w <- df_comp$wgt_comb
svyvif(model_1987, X, w)
w <- model_1987$data$wgt_comb
svyvif(model_1987, X, w)
dim(X)
dim(w)
w <- temp_data$wgt_comb
w <- temp_data[,17]
View(temp_data)
View(temp_data)
#can't handle missing values and data must align between model and X
temp_data <-df[,1:13,15,17,25]
#can't handle missing values and data must align between model and X
temp_data <-df[,c(1:13,15,17,25)]
temp_data <- temp_data %>% drop_na()
survcomp.des <- svydesign(data = df, ids = ~vpsu, weights = ~wgt_comb, strata = ~vstrat, nest=TRUE)
model_1987_comp <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=survcomp.des, family='quasibinomial', subset=(year == 1987))
model_2021_comp <- svyglm(religion_imp ~ wrkstat+marital+age+educ+sex+race+born+income+
region+partyid+relig+zodiac, design=survcomp.des, family='quasibinomial', subset=(year == 2021))
model_ary <- model.matrix(model_1987$formula, data = model_1987$data)
X <- model_ary[, -2]
w <- temp_data[,17]
w <- temp_data[,15]
svyvif(model_1987, X, w)
dim(w)
dim(X)
model_ary <- model.matrix(model_1987$formula, data = model_1987_comp$data)
X <- model_ary[, -2]
w <- model_1987_comp$data[,15]
model_1987_comp
X <- model_ary[, -2]
w <- model_1987_comp$weights
svyvif(model_1987, X, w)
vif_1987 <- svyvif(model_1987, X, w)
View(vif_1987)
View(vif_1987)
vif_1987 <- svyvif(model_1987_comp, X, w)
model_ary <- model.matrix(model_2021_comp$formula, data = model_2021_comp$data)
X <- model_ary[, -2]
w <- model_2021_comp$weights
vif_2021 <- svyvif(model_2021_comp, X, w)
View(vif_2021)
View(vif_2021)
